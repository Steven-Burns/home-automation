esphome:
  name: ${device_hostname}
  friendly_name: ${device_hostname} 
  comment: ${device_comment} 
  area: ${area}
  name_add_mac_suffix: false
  project:
    name: arkadiahouse.home_automation 
    version: "0.1.1"

# Enable logging
logger:
  level: DEBUG
  # this will disable serial logging (API access should still work, tho)
  # baud_rate:0 

# Enable Home Assistant API
api:
  password: ""
  # reboot_timeout set to 0s will keep the board running even when networking (connection to the home asst api)
  # is lost, even if lost forever. 
  # reboot_timeout: 0s

ota:
  - platform: esphome
    password: !secret ota_password
      
web_server:
  port: 80
  version: 2
  include_internal: true
  log: true
  ota: false
  local: true

# this component sync the local gadget to the time of the Home Asst server
time:
  - platform: homeassistant
    id: esptime

debug:
  update_interval: 63s

text_sensor:
  - platform: debug
    device:
      name: "Device Info"
      entity_category: "diagnostic"
    reset_reason:
      name: "Reset Reason"
      entity_category: "diagnostic"
  - platform: version
    name: "Device Firmware Version"
    entity_category: "diagnostic"
    
button:
  - platform: restart
    icon: mdi:power-cycle
    name: "Safely Restart Device"
    entity_category: diagnostic

sensor:
  - platform: uptime
    name: Uptime (approx)
    id: sys_uptime_id
    state_class: total_increasing
    update_interval: 60s
    entity_category: "diagnostic"
  - platform: debug
    free:
      name: "Heap Free"
      entity_category: "diagnostic"
      unit_of_measurement: B
      state_class: measurement
      device_class: data_size
      filters:
        delta: 100      
    fragmentation:
      name: "Heap Fragmentation"
      entity_category: "diagnostic"
      filters:
        delta: 1      
    block:
      name: "Heap Max Block"
      entity_category: "diagnostic"
      unit_of_measurement: B
      device_class: data_size
      filters:
        delta: 100      
    loop_time:
      name: "Loop Time"
      entity_category: "diagnostic"
      filters:
        delta: 1
  - platform: template
    id: sys_esp_cpu_freq_id
    name: "CPU Speed"
    unit_of_measurement: MHz
    state_class: measurement
    entity_category: "diagnostic"
    filters:
      delta: 1
    lambda: return system_get_cpu_freq();  
