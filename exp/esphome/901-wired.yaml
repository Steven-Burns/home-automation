esphome:
  name: 901-wired
  friendly_name: 901-wired 
  comment: |- 
    Start with this and add hardware...
  area: Gym
  name_add_mac_suffix: true
  project:
    name: "arkadiahouse.home_automation"
    version: "0.1.1"

esp32:
  board: nodemcu-32s
  framework:
    type: arduino

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  password: ""
  # reboot_timeout set to 0s will keep the board running even when networking (connection to the home asst api)
  # is lost, even if lost forever. 
  # reboot_timeout: 0s

ota:
  - platform: esphome
    password: ""

ethernet:
  type: W5500
  clk_pin: GPIO18
  mosi_pin: GPIO23
  miso_pin: GPIO19
  cs_pin: GPIO5
  interrupt_pin: GPIO17
  reset_pin: GPIO16
  # clock_speed: 

# wifi and (wired) ethernet are mutally exclusive, lamentably. 
# wifi:
#   id: wifi_id
#   ssid: !secret wifi_ssid
#   password: !secret wifi_password
#   # Enable fallback hotspot (captive portal) in case wifi connection fails
#   ap:
#     ssid: "Fallback Hotspot"
#     password: "PJnNb7VRCS3I"
#
# captive_portal:

text_sensor:
  # - platform: wifi_info
  #   ip_address:
  #     name: IP Address
  #   ssid:
  #     name: Connected SSID
  #   bssid:
  #     name: Connected BSSID
  #   mac_address:
  #     name: Wifi MAC Address
  #   dns_address:
  #     name: DNS Addresses

# ethernet_info is used with the ethernet component (so uncomment this if using ethernet instead of wifi)
  - platform: ethernet_info
    ip_address:
      name: ETH IP Address
      address_0:
        name: ETH IP Address 0
      address_1:
        name: ETH IP Address 1
      address_2:
        name: ETH IP Address 2
      address_3:
        name: ETH IP Address 3
      address_4:
        name: ETH IP Address 4
    dns_address:
      name: ETH DNS Addresses
    mac_address:
      name: ETH MAC Address


web_server:
  port: 80

# this component sync the local gadget to the time of the Home Asst server
time:
  - platform: homeassistant
    id: esptime

# this combination of output and interval will blink the on-board led
# without creating a home assistant entity. No entity means that the 
# state transitions will not be communicated with Home Assistant and 
# therefore generate no traffic no data logging history.

output:
  - platform: gpio
    pin:
      number: 2
      mode: output
    id: on_board_led_id

interval:
  - interval: 500ms
    then:
      - output.turn_on: on_board_led_id
      - delay: 250ms
      - output.turn_off: on_board_led_id
