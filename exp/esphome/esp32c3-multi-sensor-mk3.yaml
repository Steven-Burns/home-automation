# hardware wired up for this configuration:
# https://devices.esphome.io/devices/temt6000
# https://community.home-assistant.io/t/aht20-bmp280-combined-sensor/366411
# https://wiki.dfrobot.com/SKU_SEN0557_24GHz_Human_Presence_Sensing_Module

esphome:
  name: esp32c3-multisensor-mk3
  friendly_name: arkadiahome multisensor, Mk III 
  comment: |- 
    temp, humidity, mm wave radar presence, light level, two momentary buttons, display
  area: Gym
  name_add_mac_suffix: true
  project:
    name: "arkadiahouse.home_automation"
    version: "0.1.1"

esp32:
  board: seeed_xiao_esp32c3
  framework:
    type: arduino

logger:

api:
  password: ""

ota:
  - platform: esphome
    password: ""

wifi:
  id: wifi_id
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "Esp32C3-test Fallback Hotspot"
    password: "PJnNb7VRCS3I"

captive_portal:

web_server:

time:
  - platform: homeassistant
    id: time_id

font:
  - file: "fonts/spleen-5x8.bdf"
    id: spleen_font
  - file: "fonts/LibreFranklin-Medium.ttf"
    id: temperature_font
    size: 34

image:
  - file: "images/presence-detected-icon.png"
    id: presence_detected_icon_id
    type: BINARY
  - file: "images/no-presence-detected-icon.png"
    id: no_presence_detected_icon_id
    type: BINARY

i2c:
  sda: GPIO6
  scl: GPIO7
  # goose up the frequency so that we don't get runtime warnings about the display component
  # taking too long to update.
  frequency: 300kHz

display:
  - platform: ssd1306_i2c
    model: "SSD1306_128x64"
    update_interval: 1s
    contrast: 20%
    invert: false
    lambda: |-
      auto width = it.get_width();
      auto height = it.get_height();

      // en lieu of a hardware blinky light, toggle a software light every 
      // time the display is updated (1s interval)
      static bool blinky_is_lit = false;
      blinky_is_lit = !blinky_is_lit;
      it.filled_rectangle(width - 2, height - 2, 2, 2, blinky_is_lit ? COLOR_ON : COLOR_OFF);

      /*
      it.filled_circle(3, height - 16, 3, COLOR_ON);
      it.circle(3, height - 16, 3, COLOR_ON);
      it.filled_circle(3, height - 10, 3, COLOR_ON);
      it.circle(3, height - 10, 3, COLOR_ON);
      */

      auto radar_target = id(ld2410_0_moving_target_binary_sensor);
      it.image(0, 44, radar_target->state ? id(presence_detected_icon_id) : id(no_presence_detected_icon_id));

      auto font_id = id(spleen_font);
      auto wifi_component = id(wifi_id);
      int char_height = 9;
      int left_margin = 0;
      int line = 0;
      it.printf(left_margin, line++ * char_height, font_id, "H:%s", App.get_name().c_str());
      for (auto &ip : wifi_component->get_ip_addresses()) 
      {
        if (ip.is_set()) {
          it.printf(left_margin, line * char_height, font_id, "I:%s", ip.str().c_str());
          ++line;
        }
      }

      auto radar_moving = id(ld2410_0_moving_target_binary_sensor);
      it.printf(left_margin, 3 * char_height, font_id, "%s", radar_moving->state ? " M" : "!M");

      auto temp = id(bmp_temperature_sensor);
      font_id = id(temperature_font);
      it.printf(36, 35, font_id, "%2.1fÂ°", temp->state);



uart:
  id: uart_0
  tx_pin: GPIO21
  rx_pin: GPIO20
  baud_rate: 256000 
  parity: NONE
  stop_bits: 1

ld2410:
  uart_id: uart_0
  id: ld2410_0

binary_sensor:
  - platform: gpio
    name: "button_0"
    id: button_0_binary_sensor
    pin:
      number: 3
      mode:
        input: true
        pulldown: true
    on_multi_click:
    - timing:
        - ON for at most 0.75s
        - OFF for at most 0.3s
        - ON for at most 0.75s
        - OFF for at least 0.1s
      then:
        - logger.log: "Double Clicked"
    - timing:
        - ON for 0.75s to 3s
        - OFF for at least 0.1s
      then:
        - logger.log: "Single Long Clicked"
    - timing:
        - ON for at most 1s
        - OFF for at least 0.2s
      then:
        - logger.log: "Single Short Clicked"
      invalid_cooldown: 0.5s
  - platform: gpio
    name: button_1
    id: button_1_binary_sensor
    pin:
      number: 10
      mode:
        input: true
        pulldown: true
    on_multi_click:
    - timing:
        - ON for at most 0.75s
        - OFF for at most 0.3s
        - ON for at most 0.75s
        - OFF for at least 0.1s
      then:
        - logger.log: "Double Clicked"
    - timing:
        - ON for 0.75s to 3s
        - OFF for at least 0.1s
      then:
        - logger.log: "Single Long Clicked"
    - timing:
        - ON for at most 1s
        - OFF for at least 0.2s
      then:
        - logger.log: "Single Short Clicked"
      invalid_cooldown: 0.5s
  - platform: ld2410
    ld2410_id: ld2410_0
    has_target:
      id: ld2410_0_target_binary_sensor
      name: "Radar Has Target"
    has_moving_target:
      # this changes immediately on motion detection.
      id: ld2410_0_moving_target_binary_sensor
      name: "Radar Moving Target"
    has_still_target:
      # "If true a still target is detected"
      id: ld2410_0_still_target_binary_sensor
      name: "Radar Still Target"

switch:
  - platform: ld2410
    ld2410_id: ld2410_0
    engineering_mode:
      name: "Radar Enable Engineering Mode"
    bluetooth:
      name: "Radar Enable Bluetooth"

button:
  - platform: ld2410
    ld2410_id: ld2410_0
    factory_reset:
      name: "Radar Factory Reset"
    restart:
      name: "Radar Restart"
    query_params:
      name: "Radar Query Params"

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "WiFi IP"
    ssid:
      name: "WiFi SSID"
    bssid:
      name: "WiFi BSSID"
    mac_address:
      name: "WiFi MAC"
    dns_address:
      name: "WiFi DNS Server"
  - platform: ld2410
    ld2410_id: ld2410_0
    version:
      name: "Radar Firmware Ver"
    mac_address:
      name: "Radar BT MAC"
      
sensor:
  - platform: adc
    pin: GPIO2
    name: "Illuminance"
    device_class: illuminance
    unit_of_measurement: lx
    filters:
      - lambda: |-
          return (x / 10000.0) * 2000000.0;
  - platform: bmp280
    address: 0x77
    # update_interval: 60s
    temperature:
      name: "BMP Temperature"
      id: bmp_temperature_sensor
      oversampling: 2x
    pressure:
      name: "Pressure"
  - platform: aht10
    address: 0x38
    variant: aht20
    # update_interval: 60s
    temperature:
      name: "AHT20 Temperature"
      id: aht20_temp
      accuracy_decimals: 1
      # filters:
      # - filter_out: 0.0
      # - median:
      #     window_size: 3
      #     send_every: 3
      #     send_first_at: 1
    humidity:
      name: "Humidity"
      id: aht20_humidity
      accuracy_decimals: 1
      # filters:
      # - filter_out: 0.0
      # - median:
      #     window_size: 3
      #     send_every: 3
      #     send_first_at: 1