esp32:
  board: nodemcu-32s

packages:
  blinky: !include
    file: include/interval-blinky.yaml
    vars:
      builtin_led_pin: "GPIO2"
  wifi: !include  
    file: include/wifi.yaml

color:
  - id: my_red
    red: 100%
    green: 3%
    blue: 5%

spi:
  interface: hardware
  clk_pin: GPIO18
  mosi_pin: GPIO23
  # from the ESPHome docs at https://esphome.io/components/display/ili9xxx
  # "A MISO pin should preferably not be specified, as this will limit the 
  # maximum rate in some circumstances, and is not required if the SPI bus 
  # is used only for the display."

# display D102
display:
  - platform: ili9xxx
    model: st7735
    dc_pin: GPIO25
    reset_pin: GPIO26
    cs_pin: GPIO5
    data_rate: 80MHz
    invert_colors: false
    color_palette: NONE
    color_order: rgb
    rotation: 180
#    show_test_card: true
    update_interval: 0.1s
    lambda: |-
      static int width = it.get_width();
      static int height = it.get_height();
      static auto color = id(my_red);
      // it.filled_rectangle(0,  0, width, height, color);

      static const int NUM_BLINKIES = 3;
      static const int MIN_X = 0;
      static const int MAX_X = width;
      static const int MIN_Y = 0;
      static const int MAX_Y = height;
      static int blinky_x[] = {0, 30, 10, 75};
      static int blinky_y[] = {0, 5, 127, 30};
      static int blinky_dx[] = {1, 1, -2, -3};
      static int blinky_dy[] = {1, -2, 1, 1};
      for (int i = 0; i < NUM_BLINKIES; ++i) 
      {
        blinky_x[i] += blinky_dx[i];
        blinky_y[i] += blinky_dy[i];
        if (blinky_x[i] > MAX_X) { blinky_x[i] = MAX_X;  blinky_dx[i] = -blinky_dx[i]; }
        if (blinky_y[i] > MAX_Y) { blinky_y[i] = MAX_Y;  blinky_dy[i] = -blinky_dy[i]; }
        if (blinky_x[i] < MIN_X ) { blinky_x[i] = MIN_X; blinky_dx[i] = -blinky_dx[i]; }
        if (blinky_y[i] < MIN_Y ) { blinky_y[i] = MIN_Y; blinky_dy[i] = -blinky_dy[i]; }
      }
      for (int i = 0; i < NUM_BLINKIES; ++i)
      {
      
        if (NUM_BLINKIES - 1 == i) 
        {
          it.line(blinky_x[i], blinky_y[i], blinky_x[0], blinky_y[0], color);
          break;
        }
        it.line(blinky_x[i], blinky_y[i], blinky_x[i + 1], blinky_y[i + 1], color);
      
      //  it.draw_pixel_at(blinky_x[i], blinky_y[i], COLOR_ON);
      }



# "All Device" baseline stuff here

<<: !include 
  file: include/esp32-device-baseline.yaml
  vars:
    device_name: "903-esphome"
    device_comment: "Board 903 connected on WiFi."
    # logger_baud_rate: "0"

# turn down the warning logging from ESPHome that complains that the display 
# component takes a long time.  A null lambda takes 60+ ms, and the warning fires
# for times > 25ms or so.
logger:
 level: DEBUG
 logs:
   component: ERROR
