esp8266:
  board: nodemcuv2

packages:
  blinky: !include
    file: include/interval-blinky.yaml
    vars:
      builtin_led_pin: "GPIO2"
  wifi: !include
    file: include/wifi.yaml
  i2c: !include
    file: include/i2c.yaml
    vars:
      i2c_sda_pin: "GPIO12"
      i2c_scl_pin: "GPIO14"

font:
  - file: "fonts/spleen-5x8.bdf"
    id: tiny_font_id

animation:
  - file: "images/falling-head.gif"
    id: animation_id
    type: BINARY

display:
  - platform: ssd1306_i2c
    id: ssd1306_id
    model: "SSD1306_128x64"
    update_interval: 0.1s
    contrast: 40%
    invert: false
    rotation: 0
    lambda: |-
      static const int CHAR_HEIGHT_PX = 8;
      static auto width = it.get_width();
      static auto height = it.get_height();
      static auto font = id(tiny_font_id);

      auto ip_addr = id(ip_address_id)->get_state();
      if (ip_addr.length())
      {
        int line = 0;
        it.printf(width, ++line * CHAR_HEIGHT_PX, font, TextAlign::BASELINE_RIGHT, "%s", App.get_name().c_str());
        it.printf(width, ++line * CHAR_HEIGHT_PX, font, TextAlign::BASELINE_RIGHT, "%s", ip_addr.c_str());  
      }

      auto ani = id(animation_id);
      it.image(0, 44, ani, COLOR_ON, COLOR_OFF);
      ani->next_frame();

      // blinky routine as an array of connected points.
      static const int NUM_BLINKIES = 3;
      static const int MIN_X = 0;
      static const int MAX_X = width;
      static const int MIN_Y = 16;
      static const int MAX_Y = height;
      static int blinky_x[] = {30, 45, 64, 10, 120, 75, 90};
      static int blinky_y[] = {5, 10, 15, 20, 25, 30, 60};
      static int blinky_dx[] = {1, 1, 1, 1, 1, -1, -2};
      static int blinky_dy[] = {1, 2, 2, -2, 4, 4, -1};
      for (int i = 0; i < NUM_BLINKIES; ++i) 
      {
        blinky_x[i] += blinky_dx[i];
        blinky_y[i] += blinky_dy[i];
        if (blinky_x[i] > MAX_X) { blinky_x[i] = MAX_X;  blinky_dx[i] = -blinky_dx[i]; }
        if (blinky_y[i] > MAX_Y) { blinky_y[i] = MAX_Y;  blinky_dy[i] = -blinky_dy[i]; }
        if (blinky_x[i] < MIN_X ) { blinky_x[i] = MIN_X; blinky_dx[i] = -blinky_dx[i]; }
        if (blinky_y[i] < MIN_Y ) { blinky_y[i] = MIN_Y; blinky_dy[i] = -blinky_dy[i]; }
      }
      for (int i = 0; i < NUM_BLINKIES; ++i)
      {
        if (NUM_BLINKIES - 1 == i) 
        {
          it.line(blinky_x[i], blinky_y[i], blinky_x[0], blinky_y[0], COLOR_ON);
          break;
        }
        it.line(blinky_x[i], blinky_y[i], blinky_x[i + 1], blinky_y[i + 1], COLOR_ON);     
      }


# "All Device" baseline stuff here

<<: !include 
  file: include/esp8266-device-baseline.yaml
  vars:
    device_name: "801-esphome"
    device_comment: "esp8266 with built-in display."



